// AUTOGENERATED FILE. DO NOT EDIT IT

// template behavior.go

package ai

type BehaviorTree struct {
  Status Status

  Root Behavior
}

func NewBehaviorTree(root Behavior) *BehaviorTree {
  return &BehaviorTree{
    Root: root,
  }
}

func (n *BehaviorTree) Update() Status {
  return n.Root.Tick()
}


func (n *BehaviorTree) Initialize() { }
func (n *BehaviorTree) Terminate(status Status) { }

func (n *BehaviorTree) IsSuccess() bool { return n.Status == SUCCESS }
func (n *BehaviorTree) IsFailure() bool { return n.Status == FAILURE }
func (n *BehaviorTree) IsRunning() bool { return n.Status == RUNNING }
func (n *BehaviorTree) IsTerminated() bool { return n.Status == SUCCESS || n.Status == FAILURE }

func (n *BehaviorTree) Reset() { n.Status = INVALID }

func (n *BehaviorTree) Tick() Status {
  if n.Status != RUNNING { n.Initialize() }
  status := n.Update()
  if n.Status != RUNNING { n.Terminate(status) }

  return status
}
