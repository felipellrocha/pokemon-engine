// AUTOGENERATED FILE. DO NOT EDIT IT

// template decorator.go

package ai

import (
  _"fmt"
)

type Failer struct {
  Status Status

  Child Behavior
}

func NewFailer(child Behavior) *Failer {
  return &Failer{
    Child: child,
  }
}

func (n *Failer) Update() Status {
  n.Child.Tick()

  return FAILURE
}


func (n *Failer) Initialize() { }
func (n *Failer) Terminate(status Status) { }

func (n *Failer) IsSuccess() bool { return n.Status == SUCCESS }
func (n *Failer) IsFailure() bool { return n.Status == FAILURE }
func (n *Failer) IsRunning() bool { return n.Status == RUNNING }
func (n *Failer) IsTerminated() bool { return n.Status == SUCCESS || n.Status == FAILURE }

func (n *Failer) Reset() { n.Status = INVALID }

func (n *Failer) Tick() Status {
  if n.Status != RUNNING { n.Initialize() }
  status := n.Update()
  if n.Status != RUNNING { n.Terminate(status) }

  return status
}

// DECORATOR SECTION
func (n *Failer) HasNoChild() bool {
  return n.Child == nil
}

func (n *Failer) AddChild(child Behavior) {
  n.Child = child
}
